<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * CommunityQuestionAnswerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommunityQuestionAnswerRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Custom orderning by
     * @param int $offset
     * @param int $limit
     * @return array
     */
    public function findPaginated($questionId = null, $offset = 0, $limit = 10)
    {
        $em = $this->getEntityManager();

        $sql = "
          SELECT 
             a.id, a.answer, a.user_id, a.parentId
          FROM community_question_answer a 
          LEFT JOIN (
            SELECT SUM(vote) as voteCount,answer_id
            FROM community_question_answer_vote
            GROUP BY answer_id
          ) v ON a.id = v.answer_id
          LEFT JOIN user u
            ON a.user_id = u.id
          WHERE community_question_id = ?
          AND a.parentId IS NULL
          ORDER BY v.voteCount DESC
          LIMIT ?,?
          ";

        $rsm = new ResultSetMappingBuilder($em);
        $rsm->addRootEntityFromClassMetadata('AppBundle\Entity\CommunityQuestionAnswer', 'a');
        $query = $em->createNativeQuery($sql, $rsm);

        $query->setParameter(1, $questionId);
        $query->setParameter(2, $offset);
        $query->setParameter(3, $limit);

        return $query->getResult();
    }

    /**
     * @return mixed
     */
    public function count($question)
    {
        return $this->_em->createQuery('SELECT COUNT(a.id) FROM AppBundle\Entity\CommunityQuestionAnswer a WHERE a.questions = :question AND a.parent IS NULL')->setParameter('question', $question)->getSingleScalarResult();
    }
}
