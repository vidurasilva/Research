<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Goal;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends \Doctrine\ORM\EntityRepository
{
    public function findTaskImage($id)
    {
        $sql = "SELECT image FROM task WHERE id = :taskId";

        $stmt = $this->_em->getConnection()->prepare($sql);
        $stmt->bindValue('taskId', $id);
        $stmt->execute();

        return $stmt->fetch();
    }

    public function findAllTasksForGoal(Goal $goal)
    {
    	$milestones = $this->_em->getRepository('AppBundle:Milestone')->findBy(['goal' => $goal->getId()]);
		$milestoneIds = [];

		foreach($milestones as $milestone)
		{
			$milestoneIds[] = $milestone->getId();
		}

		$result = $this->_em->createQueryBuilder()->select('t')
			->from('AppBundle:Task', 't')
			->where('t.milestone IN(:milestoneIds)')
			->setParameter('milestoneIds', $milestoneIds)
			->getQuery()->getResult();

		return $result;
    }


	public function countAllTasksForGoal(Goal $goal)
	{
		$milestones = $this->_em->getRepository('AppBundle:Milestone')->findBy(['goal' => $goal->getId()]);
		$milestoneIds = [];

		foreach($milestones as $milestone)
		{
			$milestoneIds[] = $milestone->getId();
		}

		$result = $this->_em->createQueryBuilder()
			->select('count(t.id)')
			->from('AppBundle:Task', 't')
			->where('t.milestone IN(:milestoneIds)')
			->setParameter('milestoneIds', $milestoneIds)
			->getQuery()->getSingleScalarResult();

		return (int) $result;
	}
}
