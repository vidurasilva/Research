<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Goal;
use AppBundle\Entity\GoalGroup;
use Doctrine\ORM\EntityRepository;
use UserBundle\Entity\User;

/**
 * ScoreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScoreRepository extends EntityRepository
{

    /**
     * Get global leaderboard of all goals excluding group goals and custom
     * goals
     *
     * @return array
     */
    public function findTopTen()
    {
        /** @var \Doctrine\ORM\QueryBuilder $qb */
        $qb = $this->createQueryBuilder('s')
          ->select('s')
          ->addSelect('SUM(s.score) as totalScore')
          ->innerJoin('s.goal', 'g')
          ->groupBy('s.user')
          ->setMaxResults(10)
          ->orderBy('totalScore', 'DESC');
        $qb->add('where',
          $qb->expr()->orX($qb->expr()->eq('g.predefined', true),
            $qb->expr()->isNotNull('g.originGoal')))
          ->andWhere('s.group_goal IS NULL');

        return $qb->getQuery()->getResult();
    }

    /**
     * Get global user position
     *
     * @param $score
     *a
     *
     * @return int
     */
    public function getUserPosition($score, User $user)
    {
        $query = $this->createQueryBuilder('s')
          ->select('SUM(s.score) AS totalScore')
          ->andWhere('s.group_goal IS NULL')
          ->groupBy('s.user')
          ->andHaving('totalScore > :score')
          ->setParameter('score', $score)
          ->orderBy('totalScore', 'DESC')
          ->getQuery();

        return count($query->getResult()) + 1;
    }

    /**
     * Get user position for specific goal
     *
     * @param      $score
     * @param Goal $goal
     *
     * @return int
     */
    public function getUserGoalPosition($score, Goal $goal)
    {
        $query = $this->createQueryBuilder('s')
          ->select('s')
          ->andWhere('s.goal = :goal')
          ->andWhere('s.score > :score')
          ->andWhere('s.group_goal IS NULL')
          ->setParameter('score', $score)
          ->setParameter('goal', $goal)
          ->getQuery();

        return count($query->getResult()) + 1;
    }

    /**
     * Get user position for specific group goal
     *
     * @param           $score
     * @param Goal $goal
     * @param GoalGroup $group
     *
     * @return mixed
     */
    public function getUserGroupGoalPosition(
      $score,
      Goal $goal,
      GoalGroup $group
    ) {
        $query = $this->createQueryBuilder('s')
          ->select('s')
          ->where('s.score > :score')
          ->andWhere('s.goal = :goal')
          ->andWhere('s.group_goal = :group')
          ->setParameter('score', $score)
          ->setParameter('goal', $goal)
          ->setParameter('group', $group)
          ->getQuery();

        return count($query->getResult()) + 1;
    }

    /**
     * Get total score for user
     *
     * @param User $user
     *
     * @return array
     */
    public function getGlobalUserScore(User $user)
    {
        $qb = $this->createQueryBuilder('s')
          ->select('s')
          ->addSelect('SUM(s.score) AS totalScore')
          ->innerJoin('s.goal', 'g')
          ->groupBy('s.user');
        $qb->add('where',
          $qb->expr()->orX($qb->expr()->eq('g.predefined', true),
            $qb->expr()->isNotNull('g.originGoal')))
          ->andWhere('s.group_goal IS NULL')
          ->andWhere('s.user = :user')
          ->setParameters([
            'user' => $user,
          ]);

        return $qb->getQuery()->getResult();
    }

    /**
     * Get full leaderboard of specific goal
     *
     * @param Goal $goal
     *
     * @return array
     */
    public function getGoalLeaderBoard(Goal $goal)
    {
        $query = $this->createQueryBuilder('s')
          ->select('s')
          ->addSelect('SUM(s.score) as totalScore')
          ->groupBy('s.user')
          ->orderBy('totalScore', 'DESC')
          ->andWhere('s.group_goal IS NULL')
          ->andWhere('s.goal = :goal')
          ->setParameter('goal', $goal)
          ->getQuery();

        return $query->getResult();
    }

    /**
     * Get full leaderboard of specific group goal
     *
     * @param Goal $goal
     * @param GoalGroup $goalGroup
     *
     * @return array
     */
    public function getGroupGoalLeaderBoard(Goal $goal, GoalGroup $goalGroup)
    {
        $query = $this->createQueryBuilder('s')
          ->select('s')
          ->addSelect('SUM(s.score) as totalScore')
          ->groupBy('s.user')
          ->orderBy('totalScore', 'DESC')
          ->andWhere('s.group_goal = :group_goal')
          ->andWhere('s.goal = :goal')
          ->setParameter('goal', $goal)
          ->setParameter('group_goal', $goalGroup)
          ->getQuery();

        return $query->getResult();
    }

}
